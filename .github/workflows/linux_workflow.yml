name: Linux workflow
on: [push, pull_request]
jobs:
  test:
    name: Test Unity
    runs-on: ubuntu-latest
    steps:
      # Activation stage
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up IBM Watson credentials
        env:
          ASSISTANTKEYS: ${{ secrets.ASSISTANTKEYS }}
        run: |
          echo -n "$ASSISTANTKEYS" > $GITHUB_WORKSPACE/ibm-credentials.env
          echo "path of the credentials resource $GITHUB_WORKSPACE/ibm-credentials.txt"
          export IBM_CREDENTIALS_FILE="$GITHUB_WORKSPACE/ibm-credentials.env"

      # Cache
      - name: Caching
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test stage
      - name: Unity Test runner (edit and play mode)
        uses: game-ci/unity-test-runner@v2.0.3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: 2020.3.38f1

  build:
    name: Build Unity
    runs-on: ubuntu-latest
    needs: test
    steps:
      # Activation stage
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up IBM Watson credentials
        env:
          ASSISTANTKEYS: ${{ secrets.ASSISTANTKEYS }}
        run: |
          echo -n "$ASSISTANTKEYS" > $GITHUB_WORKSPACE/ibm-credentials.env
          ls -la
          echo "path of the credentials resource $GITHUB_WORKSPACE/ibm-credentials.txt"
          export IBM_CREDENTIALS_FILE="$GITHUB_WORKSPACE/ibm-credentials.env"

      # Cache
      - name: Caching
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build stage
      - name: Unity builder
        uses: game-ci/unity-builder@v2.1.1
        id: buildStep
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: Android
          unityVersion: 2020.3.38f1
          versioning: Semantic
          # dirty build needed to include generated Watson credentials
          allowDirtyBuild: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build
          retention-days: 90
          if-no-files-found: error
